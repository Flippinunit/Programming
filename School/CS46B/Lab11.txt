A1) O
   O   O
  /     \
 O       O

    O O         O    O          O
   /   \       /      \        / \
  O     O     O        O      O   O
 /       \     \      /
O         O     O    O

A2)  t2 = n - 1 - k

A3) S(n) = S(0) x S(n-1) + S(1) x S(n-1-1) + ... + S(k) x S(n-k-1)

A4) S(0) = 0 
S(1) = 1

A5)
S(2) = S(0) x S(1) + S(1) x S(0) = 1 + 1 = 2 yes
S(3) = S(0) x S(2) + S(1) x S(1) + S(2)x s(0) = 2 +1 + 2 = 5 yes

A6) Done
A7) Because it evaluates each node over and over. It evaluates for example S(3) probably more than n^n times.
A8) for f in `seq 1 2 ... 20` ; do 

B1) Done

B2) The program returns the address of the tree.

B3) Yes

B4) Done

B5) Done

B6) 362

B7) ((.)3(.))6((.)2(.))

B8)      6
        /  \
       2    3
      / \   /\
     .   1 1  1
        /\/\ /\ 
       . ....  .

B9)      ((. 1 .)3(. 1 .))6(. 2 (1))

C1) Done

C2) Done

C3) Done

C4) 32 
C5) smallest size of size 6 is 3.

C6)Done

C7) 4

D1) because it doesnt have a consturctor it uses paramaters

D2) Because It uses a is able to compare values, it isnt requried to use a constructor that uses paramteres with left being less than and right being greatehr tha.

D3) It prints ADDRESSES beacsue theres no toString method.

D4) Because it returns a string, not prints it.

D5) Done

D6) Done

D7) Done

E1)